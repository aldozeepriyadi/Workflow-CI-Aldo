name: ML Model Training Workflow

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  train-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This grants write permission to the workflow
    steps:
      - name: Set up job
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.2'

      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          activate-environment: mlflow-env
          environment-file: MLProject/conda.yaml
          python-version: 3.12  # versi matching dari conda.yaml
          
      - name: Check Env
        shell: bash -l {0}
        run: |
         echo "Current working directory: $(pwd)"
         echo "Python version: $(python --version)"
         echo "MLflow version: $(mlflow --version)"
         echo "Conda environment: $CONDA_DEFAULT_ENV"
          
      - name: Install MLFlow
        run: |
         conda install -c conda-forge mlflow -y
          
        
          

      - name: Run mlflow project
        shell: bash -l {0}
        run: |
          mlflow run MLProject -P data_path=preprocessing/preprocessed_dataset.csv
          
      - name: Get latest MLflow run_id
        shell: bash -l {0}
        id: get_run_id
        run: |
          cd MLProject
          echo "Getting run_id from run_id.txt"
          RUN_ID=$(cat run_id.txt)  # Read the run_id from the file
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT  # Store the run_id in GitHub Actions' output variable

        
      - name: Verify MLflow Run
        shell: bash -l {0}
        run: |
          echo "Checking if the run_id exists in MLflow..."
          RUN_ID=$(cat MLProject/run_id.txt)  # Get the run_id from the file
          mlflow_runs=$(python -c "import mlflow; runs = mlflow.search_runs(order_by=['start_time DESC']); print(runs[runs['run_id'] == '${RUN_ID}'].shape[0])")
          if [ "$mlflow_runs" -eq 0 ]; then
            echo "Error: Run ID does not exist in MLflow!"
            exit 1
          else
            echo "Run ID exists, continuing with the process..."
          fi
          
      - name: Upload model artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: MLProject/mlruns/
          retention-days: 30
          
          
      - name: Build Docker Model
        shell: bash -l {0}
        run: |
          cd MLProject
          # Build Docker image directly using MLflow
          mlflow models build-docker \
            -m "runs:/${{ steps.get_run_id.outputs.run_id }}/model" \
            -n "personality:${GITHUB_SHA}"  # Updated to 'personality'
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Tag Docker Image
        shell: bash -l {0}
        run: |
          docker tag personality:${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/personality:latest  # Updated to 'personality'
          docker tag personality:${GITHUB_SHA} ${{ secrets.DOCKER_USERNAME }}/personality:${GITHUB_SHA}  # Updated to 'personality'
          
      - name: Push Docker Image
        shell: bash -l {0}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/personality:latest  # Updated to 'personality'
          docker push ${{ secrets.DOCKER_USERNAME }}/personality:${GITHUB_SHA}  # Updated to 'personality'
          
      - name: Post Log in to Docker Hub
        run: echo "Docker image pushed successfully to Docker Hub"
          
      - name: Complete job
        run: echo "Workflow completed successfully!"
